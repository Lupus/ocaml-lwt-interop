(function() {
    var type_impls = Object.fromEntries([["ocaml_lwt_interop",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.coerce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">coerce</a>(&amp;self) -&gt; OwningRef&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Erased&gt;, T&gt;</h4></section></summary><div class=\"docblock\"><p>Coerces the <code>DynBox</code> to a handle of the specified type.</p>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A handle to the coerced type. Note that this handle holds a lock, so use\nwith care to avoid deadlocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.coerce_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">coerce_mut</a>(&amp;self) -&gt; OwningRefMut&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Erased&gt;, T&gt;</h4></section></summary><div class=\"docblock\"><p>Coerces the <code>DynBox</code> to a mutable handle of the specified type.</p>\n<h5 id=\"returns-1\"><a class=\"doc-anchor\" href=\"#returns-1\">§</a>Returns</h5>\n<p>A mutable handle to the coerced type. Note that this handle holds a\nlock, so use with care to avoid deadlocks.</p>\n</div></details></div></details>",0,"ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_exclusive_boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_exclusive_boxed</a>(value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>DynBox</code> with a <code>Mutex</code> out of a Box’ed T. Useful if T is\nunsized, e.g. a <code>dyn Trait</code>.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The value (inside a Box) to be wrapped in the <code>DynBox</code>.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A new <code>DynBox</code> instance with <code>Mutex</code> protection.</p>\n</div></details></div></details>",0,"ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_exclusive\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_exclusive</a>(value: T) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>DynBox</code> with a <code>Mutex</code>.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The value to be wrapped in the <code>DynBox</code>.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A new <code>DynBox</code> instance with <code>Mutex</code> protection.</p>\n</div></details></div></details>",0,"ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_shared_boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_shared_boxed</a>(value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>DynBox</code> with a <code>RwLock</code> out of a Box’ed T. Useful if T is\nunsized, e.g. a <code>dyn Trait</code>.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The value (inside a Box) to be wrapped in the <code>DynBox</code>.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A new <code>DynBox</code> instance with <code>RwLock</code> protection.</p>\n</div></details></div></details>",0,"ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DynBox&lt;T&gt;<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_shared\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_shared</a>(value: T) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>DynBox</code> with a <code>RwLock</code>.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The value to be wrapped in the <code>DynBox</code>.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A new <code>DynBox</code> instance with <code>RwLock</code> protection.</p>\n</div></details></div></details>",0,"ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CT%3E-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for DynBox&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: T) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Default From implementation is just creating an exclusive DynBox, i.e.\nprotected by a Mutex, be careful with deadlocks!</p>\n</div></details></div></details>","From<T>","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromValue-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-FromValue-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromValue for DynBox&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value\" class=\"method trait-impl\"><a href=\"#method.from_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_value</a>(v: Value) -&gt; DynBox&lt;T&gt;</h4></section></summary><div class='docblock'>Convert from OCaml value</div></details></div></details>","FromValue","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OCamlBinding-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-OCamlBinding-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OCamlBinding for DynBox&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml_binding\" class=\"method trait-impl\"><a href=\"#method.ocaml_binding\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ocaml_binding</a>(\n    env: &amp;mut Env,\n    rename: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,\n    new_type: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>will generate the OCaml bindings for a type (called root type).\nIt takes the current environment [Env],\nas well as an optional name (if you wish to rename the type in OCaml).</div></details></div></details>","OCamlBinding","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OCamlDesc-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-OCamlDesc-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OCamlDesc for DynBox&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml_desc\" class=\"method trait-impl\"><a href=\"#method.ocaml_desc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ocaml_desc</a>(env: &amp;Env, _generics: &amp;[&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>]) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>describes the type in OCaml, given the current environment [Env]\nand the list of generic type parameters of the root type\n(the type that makes use of this type)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unique_id\" class=\"method trait-impl\"><a href=\"#method.unique_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unique_id</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Returns a unique ID for the type. This ID will not change if concrete type parameters are used.</div></details></div></details>","OCamlDesc","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToValue-for-DynBox%3CT%3E\" class=\"impl\"><a href=\"#impl-ToValue-for-DynBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ToValue for DynBox&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value\" class=\"method trait-impl\"><a href=\"#method.to_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_value</a>(&amp;self, rt: &amp;Runtime) -&gt; Value</h4></section></summary><div class='docblock'>Convert to OCaml value</div></details></div></details>","ToValue","ocaml_lwt_interop::stubs::Future","ocaml_lwt_interop::stubs::Executor"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[17400]}