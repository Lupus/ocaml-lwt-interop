var searchIndex = new Map(JSON.parse('[["ocaml_lwt_interop",{"t":"CCCXCCCCFNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNONNONNNNNHHNNNNNNHHOHNNHHNNNHNNNNNNNNNNNNNNNGPNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNHNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIHHHHHHHHHH","n":["async_func","domain_executor","error","func","ml_box_future","notification","promise","stubs","OCamlAsyncFunc","borrow","borrow_mut","call","from","from_value","into","new","ocaml_desc","try_from","try_into","type_id","unique_id","DomainExecutor","DomainExecutorDriver","ExecutorGuard","Handle","OcamlRuntimeGuard","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","deref","driver","drop","enter","executor","from","","","","","handle","handle_from_runtime","into","","","","","new","ocaml_runtime","run_in_ocaml_domain","runtime","spawn","","","spawn_lwt","spawn_with_runtime","tick","","to_owned","tokio_rt","try_from","","","","","try_into","","","","","type_id","","","","","Error","LwtPromiseRejection","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id","MlBoxFuture","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","fmt","from","into","into_future","new","poll","reject","resolve","to_owned","try_from","try_into","try_poll","type_id","Notification","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","lwt_unix_send_notification","send","to_owned","try_from","try_into","type_id","Promise","PromiseFuture","Resolver","borrow","","","borrow_mut","","","fmt","from","","","from_value","into","","","into_future","","new","ocaml_desc","poll","reject","resolve","to_value","try_from","","","try_into","","","try_poll","type_id","","","unique_id","Executor","Future","lwti_executor_create","lwti_executor_create_to_ocaml","lwti_executor_run_pending","lwti_executor_run_pending_to_ocaml","lwti_mlbox_future_create","lwti_mlbox_future_create_to_ocaml","lwti_mlbox_future_reject","lwti_mlbox_future_reject_to_ocaml","lwti_mlbox_future_resolve","lwti_mlbox_future_resolve_to_ocaml"],"q":[[0,"ocaml_lwt_interop"],[8,"ocaml_lwt_interop::async_func"],[21,"ocaml_lwt_interop::domain_executor"],[84,"ocaml_lwt_interop::error"],[96,"ocaml_lwt_interop::ml_box_future"],[116,"ocaml_lwt_interop::notification"],[131,"ocaml_lwt_interop::promise"],[167,"ocaml_lwt_interop::stubs"],[179,"ocaml::value"],[180,"core::marker"],[181,"ocaml_rs_smartptr::callable"],[182,"ocaml::runtime"],[183,"ocaml_gen"],[184,"alloc::string"],[185,"core::result"],[186,"core::any"],[187,"std::sync::poison::mutex"],[188,"alloc::sync"],[189,"core::ops::function"],[190,"core::panic::unwind_safe"],[191,"async_task::task"],[192,"core::future::future"],[193,"tokio::runtime::runtime"],[194,"core::fmt"],[195,"core::pin"],[196,"core::task::wake"],[197,"core::task::poll"],[198,"ocaml_rs_smartptr::ml_box"],[199,"core::option"],[200,"ocaml_lwt_interop_macro"]],"i":"`````````f00000000000`````DbC`BlBjBd432100001232243210``432102``2`20``420`432104321043210`Df0000000000`Dl000000000000000000`Cd0000000`00000```Ejhn210021002101000122021021012100````````````","f":"`````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{ec}}}}e}{{h{c}}}{jl}{{A`{{n{c}}}}}}{cc{}}{Ab{{f{ce}}}{}{}}{{}c{}}{{{b{Ad}}Ab}{{f{ce}}}{}{}}{{{b{Af}}{b{{Aj{{b{Ah}}}}}}}Al}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}{{}Bb}`````;;;;;:::::{{{b{Bd}}}Bd}{{b{b{dc}}}Bf{}}{{bBh}Bf}{{{b{Bj}}}{{b{c}}}{}}{BlBn}{{{b{dC`}}}Bf}{{{b{Bl}}}C`}{BlCb}{cc{}}0000{{}Bd}{{{b{Ad}}}Bd}{{}c{}}0000{CdBl}{{}Bj}{{{b{Bd}}e}cl{{Ch{{b{Ad}}}{{Cf{c}}}}Cj}}7{e{{Cl{c}}}l{{Cn{}{{Cf{c}}}}l}}{{{b{Bl}}e}{{Cl{c}}}l{{Cn{}{{Cf{c}}}}l}}{{{b{Bd}}e}{{Cl{c}}}l{{Cn{}{{Cf{c}}}}l}}{{{b{Ad}}e}{{n{c}}}{D`l}{{Cn{}{{Cf{c}}}}l}}{{{b{Ad}}e}{{Cl{c}}}l{{Cn{}{{Cf{c}}}}l}}{{{b{dDb}}}Bf}{{{b{Bl}}}Bf}{bc{}}{{}{{Cb{Dd}}}}{c{{An{e}}}{}{}}0000{{}{{An{c}}}{}}0000{bB`}0000``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Df}}{b{dDh}}}Dj}0{cc{}}{{}c{}}{bAl}876`54{{{b{Dl}}}Dl}{{b{b{dc}}}Bf{}}{{bBh}Bf}{{}Dl}{{{b{Dl}}{b{dDh}}}Dj}76{{}}2{{{Dn{{b{dDl}}}}{b{dE`}}}{{Eb{c}}}{}}{{{b{Dl}}Al}Bf}{{{b{Dl}}Ed}Bf}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{{{Dn{{b{dc}}}}{b{dE`}}}Eb{}}{bB`}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Cd}}}Cd}?>{{{b{Cd}}{b{dDh}}}Dj}{cc{}}{{}c{}}{EfBf}{CdBf}<;:8```777666{{{b{{n{c}}}}{b{dDh}}}DjEh}444{Ab{{n{c}}}{jD`}}444{{}}{{{n{c}}}e{jl}{}}{{{b{Ad}}}{{El{{n{c}}{Ej{c}}}}}D`}{{{b{Af}}{b{{Aj{{b{Ah}}}}}}}Al}{{{Dn{{b{d{h{c}}}}}}{b{dE`}}}{{Eb{e}}}{jl}{}}{{{Ej{c}}{b{Ad}}Al}BfD`}{{{Ej{c}}{b{Ad}}{b{c}}}BfD`}{{{b{{n{c}}}}{b{Ad}}}AbD`}{c{{An{e}}}{}{}}00{{}{{An{c}}}{}}00{{{Dn{{b{dc}}}}{b{dE`}}}Eb{}}{bB`}00{{}Bb}``{EnEn}{{{b{Af}}{F`{{b{Ah}}}}}Al}1010{{EnEn}En}101","D":"Hn","p":[[1,"reference",null,null,1],[0,"mut"],[5,"OCamlAsyncFunc",8],[5,"PromiseFuture",131],[10,"FromValue",179],[10,"Send",180],[5,"Promise",131],[10,"Callable",181],[6,"Value",179],[5,"Runtime",182],[5,"Env",183],[1,"str"],[1,"slice"],[5,"String",184],[6,"Result",185,null,1],[5,"TypeId",186],[1,"u128"],[5,"Handle",21],[1,"unit"],[1,"u8"],[5,"OcamlRuntimeGuard",21],[5,"DomainExecutor",21],[5,"Mutex",187],[5,"ExecutorGuard",21],[5,"Arc",188,null,1],[5,"Notification",116],[17,"Output"],[10,"FnOnce",189],[10,"UnwindSafe",190],[5,"Task",191],[10,"Future",192,null,1],[10,"ToValue",179],[5,"DomainExecutorDriver",21],[5,"Runtime",193],[6,"Error",84],[5,"Formatter",194],[8,"Result",194],[5,"MlBoxFuture",96],[5,"Pin",195],[5,"Context",196],[6,"Poll",197],[5,"MlBox",198],[1,"isize"],[10,"Debug",194],[5,"Resolver",131],[1,"tuple",null,null,1],[5,"Raw",179],[6,"Option",199,null,1]],"r":[[3,200]],"b":[[88,"impl-Display-for-Error"],[89,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGwAEQADAAEACgABAA4AAAARAAQAGwANAEQAAABGABQAXQADAGIABgBrAAAAcAALAH4ABQCHAAYAkQAAAJUAAQCcAAoAqAALAA==","P":[[9,"T"],[11,"Ret,Args"],[12,"T"],[13,"Args,Ret"],[14,"U"],[15,"Args,Ret"],[16,""],[17,"U,T"],[18,"U"],[19,""],[26,"T"],[36,""],[37,"T"],[38,""],[39,"Deref::Target"],[40,""],[44,"T"],[49,""],[51,"U"],[56,""],[58,"T,"],[59,""],[60,"T,"],[65,""],[67,"T"],[68,""],[69,"U,T"],[74,"U"],[79,""],[86,"T"],[88,""],[90,"T"],[91,"U"],[92,""],[93,"U,T"],[94,"U"],[95,""],[97,"T"],[99,""],[100,"T"],[101,""],[104,"T"],[105,"U"],[106,""],[108,"Future::Output"],[109,""],[111,"T"],[112,"U,T"],[113,"U"],[114,"F"],[115,""],[117,"T"],[119,""],[120,"T"],[121,""],[123,"T"],[124,"U"],[125,""],[127,"T"],[128,"U,T"],[129,"U"],[130,""],[134,"T"],[145,"U"],[148,""],[149,"T,IntoFuture::IntoFuture"],[150,"T"],[151,""],[152,"T,Future::Output"],[153,"T"],[156,"U,T"],[159,"U"],[162,"F"],[163,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6443]}