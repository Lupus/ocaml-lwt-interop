var searchIndex = new Map(JSON.parse('[["ocaml_lwt_interop",{"t":"CCCXCCCCFNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNONNONNNNNHHNNNNNNHHOHNNHHNNNHNNNNNNNNNNNNNNNGPNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNHNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIHHHHHHHHHH","n":["async_func","domain_executor","error","func","ml_box_future","notification","promise","stubs","OCamlAsyncFunc","borrow","borrow_mut","call","clone","clone_into","clone_to_uninit","from","from_value","into","new","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","DomainExecutor","DomainExecutorDriver","ExecutorGuard","Handle","OcamlRuntimeGuard","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","deref","driver","drop","enter","executor","from","","","","","handle","handle_from_runtime","into","","","","","new","ocaml_runtime","run_in_ocaml_domain","runtime","spawn","","","spawn_lwt","spawn_with_runtime","tick","","to_owned","tokio_rt","try_from","","","","","try_into","","","","","type_id","","","","","Error","LwtPromiseRejection","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id","MlBoxFuture","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","fmt","from","into","into_future","new","poll","reject","resolve","to_owned","try_from","try_into","try_poll","type_id","Notification","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","lwt_unix_send_notification","send","to_owned","try_from","try_into","type_id","Promise","PromiseFuture","Resolver","borrow","","","borrow_mut","","","fmt","from","","","from_value","into","","","into_future","","new","ocaml_desc","poll","reject","resolve","to_value","try_from","","","try_into","","","try_poll","type_id","","","unique_id","Executor","Future","lwti_executor_create","lwti_executor_create_to_ocaml","lwti_executor_run_pending","lwti_executor_run_pending_to_ocaml","lwti_mlbox_future_create","lwti_mlbox_future_create_to_ocaml","lwti_mlbox_future_reject","lwti_mlbox_future_reject_to_ocaml","lwti_mlbox_future_resolve","lwti_mlbox_future_resolve_to_ocaml"],"q":[[0,"ocaml_lwt_interop"],[8,"ocaml_lwt_interop::async_func"],[25,"ocaml_lwt_interop::domain_executor"],[88,"ocaml_lwt_interop::error"],[100,"ocaml_lwt_interop::ml_box_future"],[120,"ocaml_lwt_interop::notification"],[135,"ocaml_lwt_interop::promise"],[171,"ocaml_lwt_interop::stubs"],[183,"ocaml::value"],[184,"core::marker"],[185,"ocaml_rs_smartptr::callable"],[186,"core::clone"],[187,"ocaml::runtime"],[188,"ocaml_gen"],[189,"alloc::string"],[190,"core::result"],[191,"core::any"],[192,"std::sync::poison::mutex"],[193,"alloc::sync"],[194,"core::ops::function"],[195,"core::panic::unwind_safe"],[196,"async_task::task"],[197,"core::future::future"],[198,"tokio::runtime::runtime"],[199,"core::fmt"],[200,"core::pin"],[201,"core::task::wake"],[202,"core::task::poll"],[203,"ocaml_rs_smartptr::ml_box"],[204,"core::option"],[205,"ocaml_lwt_interop_macro"]],"i":"`````````f000000000000000`````DdCbBnBlBj432100001232243210``432102``2`20``420`432104321043210`Dh0000000000`Dn000000000000000000`Cf0000000`00000```Elhn210021002101000122021021012100````````````","f":"`````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{ec}}}}e}{{h{c}}}{jl}{{A`{{n{c}}}}}}{{{b{{f{ce}}}}}{{f{ce}}}AbAb}{{b{b{dc}}}Ad{}}{{bAf}Ad}{cc{}}{Ah{{f{ce}}}{}{}}{{}c{}}{{{b{Aj}}Ah}{{f{ce}}}{}{}}{{{b{Al}}{b{{B`{{b{An}}}}}}}Bb}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}{{}Bh}`````?????>>>>>{{{b{Bj}}}Bj}<;{{{b{Bl}}}{{b{c}}}{}}{BnC`}{{{b{dCb}}}Ad}{{{b{Bn}}}Cb}{BnCd}?????{{}Bj}{{{b{Aj}}}Bj}?????{CfBn}{{}Bl}{{{b{Bj}}e}cl{{Cj{{b{Aj}}}{{Ch{c}}}}Cl}}5{e{{Cn{c}}}l{{D`{}{{Ch{c}}}}l}}{{{b{Bn}}e}{{Cn{c}}}l{{D`{}{{Ch{c}}}}l}}{{{b{Bj}}e}{{Cn{c}}}l{{D`{}{{Ch{c}}}}l}}{{{b{Aj}}e}{{n{c}}}{Dbl}{{D`{}{{Ch{c}}}}l}}{{{b{Aj}}e}{{Cn{c}}}l{{D`{}{{Ch{c}}}}l}}{{{b{dDd}}}Ad}{{{b{Bn}}}Ad}{bc{}}{{}{{Cd{Df}}}}{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{bBf}0000``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Dh}}{b{dDj}}}Dl}0{cc{}}{{}c{}}{bBb}876`54{{{b{Dn}}}Dn}{{b{b{dc}}}Ad{}}{{bAf}Ad}{{}Dn}{{{b{Dn}}{b{dDj}}}Dl}76{{}}2{{{E`{{b{dDn}}}}{b{dEb}}}{{Ed{c}}}{}}{{{b{Dn}}Bb}Ad}{{{b{Dn}}Ef}Ad}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{{{E`{{b{dc}}}}{b{dEb}}}Ed{}}{bBf}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Cf}}}Cf}?>{{{b{Cf}}{b{dDj}}}Dl}{cc{}}{{}c{}}{EhAd}{CfAd}<;:8```777666{{{b{{n{c}}}}{b{dDj}}}DlEj}444{Ah{{n{c}}}{jDb}}444{{}}{{{n{c}}}e{jl}{}}{{{b{Aj}}}{{En{{n{c}}{El{c}}}}}Db}{{{b{Al}}{b{{B`{{b{An}}}}}}}Bb}{{{E`{{b{d{h{c}}}}}}{b{dEb}}}{{Ed{e}}}{jl}{}}{{{El{c}}{b{Aj}}Bb}AdDb}{{{El{c}}{b{Aj}}{b{c}}}AdDb}{{{b{{n{c}}}}{b{Aj}}}AhDb}{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{{{E`{{b{dc}}}}{b{dEb}}}Ed{}}{bBf}00{{}Bh}``{F`F`}{{{b{Al}}{Fb{{b{An}}}}}Bb}1010{{F`F`}F`}101","D":"Hn","p":[[1,"reference",null,null,1],[0,"mut"],[5,"OCamlAsyncFunc",8],[5,"PromiseFuture",135],[10,"FromValue",183],[10,"Send",184],[5,"Promise",135],[10,"Callable",185],[10,"Clone",186],[1,"unit"],[1,"u8"],[6,"Value",183],[5,"Runtime",187],[5,"Env",188],[1,"str"],[1,"slice"],[5,"String",189],[6,"Result",190,null,1],[5,"TypeId",191],[1,"u128"],[5,"Handle",25],[5,"OcamlRuntimeGuard",25],[5,"DomainExecutor",25],[5,"Mutex",192],[5,"ExecutorGuard",25],[5,"Arc",193,null,1],[5,"Notification",120],[17,"Output"],[10,"FnOnce",194],[10,"UnwindSafe",195],[5,"Task",196],[10,"Future",197,null,1],[10,"ToValue",183],[5,"DomainExecutorDriver",25],[5,"Runtime",198],[6,"Error",88],[5,"Formatter",199],[8,"Result",199],[5,"MlBoxFuture",100],[5,"Pin",200],[5,"Context",201],[6,"Poll",202],[5,"MlBox",203],[1,"isize"],[10,"Debug",199],[5,"Resolver",135],[1,"tuple",null,null,1],[5,"Raw",183],[6,"Option",204,null,1]],"r":[[3,205]],"b":[[92,"impl-Display-for-Error"],[93,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHAAEgADAAEACgABAA0AAgARAAAAFAAFAB8ADQBIAAAASgAUAGEAAwBmAAYAbwAAAHQACwCCAAUAiwAGAJUAAACZAAEAoAAKAKwACwA=","P":[[9,"T"],[11,"Ret,Args"],[12,"Args,Ret"],[13,"T"],[14,""],[15,"T"],[16,"Args,Ret"],[17,"U"],[18,"Args,Ret"],[19,""],[20,"T"],[21,"U,T"],[22,"U"],[23,""],[30,"T"],[40,""],[41,"T"],[42,""],[43,"Deref::Target"],[44,""],[48,"T"],[53,""],[55,"U"],[60,""],[62,"T,"],[63,""],[64,"T,"],[69,""],[71,"T"],[72,""],[73,"U,T"],[78,"U"],[83,""],[90,"T"],[92,""],[94,"T"],[95,"U"],[96,""],[97,"U,T"],[98,"U"],[99,""],[101,"T"],[103,""],[104,"T"],[105,""],[108,"T"],[109,"U"],[110,""],[112,"Future::Output"],[113,""],[115,"T"],[116,"U,T"],[117,"U"],[118,"F"],[119,""],[121,"T"],[123,""],[124,"T"],[125,""],[127,"T"],[128,"U"],[129,""],[131,"T"],[132,"U,T"],[133,"U"],[134,""],[138,"T"],[149,"U"],[152,""],[153,"T,IntoFuture::IntoFuture"],[154,"T"],[155,""],[156,"T,Future::Output"],[157,"T"],[160,"U,T"],[163,"U"],[166,"F"],[167,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6614]}