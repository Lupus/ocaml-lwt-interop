name: Rust tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest]
        ocaml-compiler:
          [
            "4.14.1", "5.2.1"
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache-key: ${{ matrix.ocaml-compiler }}-${{ matrix.os }}
          components: clippy, rustfmt

      - name: OCaml/Opam cache
        id: ocaml-rs-opam-cache
        uses: actions/cache@v4
        with:
          path: "~/.opam"
          key: ocaml-rs-opam-${{ matrix.ocaml-compiler }}-${{ matrix.os }}

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: cargo fmt --all -- --check
      - run: opam exec -- cargo clippy --all -- -D warnings

      - run: opam install . --deps-only --with-test
      - run: opam exec -- dune build
      - run: opam exec -- dune runtest

  build-docs:
    needs: test
    name: Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 30
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: OCaml/Opam cache
        id: ocaml-rs-opam-cache
        uses: actions/cache@v4
        with:
          path: "~/.opam"
          key: ocaml-rs-opam-docs

      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.2.1

      - name: Build docs
        run: opam exec -- cargo doc --no-deps --release
      - name: Create index.html redirect
        run: |
          echo '<meta http-equiv="refresh" content="0; url=ocaml_lwt_interop/">' > target/doc/index.html
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
